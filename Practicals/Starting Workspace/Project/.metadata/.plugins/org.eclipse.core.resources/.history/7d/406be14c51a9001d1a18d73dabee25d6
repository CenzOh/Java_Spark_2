package com.virtualpairprogrammers;

import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Row;
import org.apache.spark.sql.SparkSession;
import org.apache.spark.sql.types.DataTypes;
import static org.apache.spark.sql.functions.*;


public class Lesson78 {
	
/* Lesson 78 How does SQL and DataFrame performance compare?
 */
	
	@SuppressWarnings("resource") 
	public static void main(String[] args) {
		System.setProperty("hadoop.home.dir", "c:/hadoop");
		Logger.getLogger("org.apache").setLevel(Level.WARN);
	
		SparkSession spark = SparkSession.builder().appName("testingSql").master("local[*]")
				.config("spark.sql.warehouse.dir", "file:///c:/tmp/")
				.getOrCreate();
				
		Dataset<Row> dataset = spark.read().option("header", true).csv("Src/main/resources/biglog.txt");
		
// SQL reference
//		Dataset<Row> results = spark.sql
//			("select level, date_format(datetime, 'MMMM') as month, count(1) as total "
//			+ "from logging_table group by level, month order by cast(first(date_format(datetime, 'M')) as int), level"); 
			
// Java API / DataFrame version
			
		dataset = dataset.select(col("level"), 
						  date_format(col("datetime"), "MMMM").alias("month"), 
					  	  date_format(col("datetime"), "M").alias("monthnum").cast(DataTypes.IntegerType) );
		
//		dataset.rdd(); //can call rdd method, this returns a standard RDD object like the rdds we worked with earlier in the course
	
//		Object[] months = new Object[] {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
//		List<Object> columns = Arrays.asList(months); //dont need these for this lesson either
			
//		dataset = dataset.groupBy("level").pivot("month", columns).count(); //dont need this for this lesson
		
		dataset = dataset.groupBy("level", "month", "monthnum").count().as("total").orderBy("monthnum"); //making the java code as similar to what we have in the sql version
		dataset = dataset.drop("monthnum");
 
		dataset.show(100);
		
		Scanner scanner = new Scanner(System.in); //our way to let us view the spark ui
		scanner.hasNextLine();
		

		spark.close();
	
	}
}
