package com.virtualpairprogrammers;

import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.apache.spark.ml.evaluation.RegressionEvaluator;
import org.apache.spark.ml.feature.VectorAssembler;
import org.apache.spark.ml.param.ParamMap;
import org.apache.spark.ml.regression.LinearRegression;
import org.apache.spark.ml.regression.LinearRegressionModel;
import org.apache.spark.ml.tuning.ParamGridBuilder;
import org.apache.spark.ml.tuning.TrainValidationSplit;
import org.apache.spark.ml.tuning.TrainValidationSplitModel;
import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Row;
import org.apache.spark.sql.SparkSession;

public class Lesson101 {

/* Lesson 101 Describing the Features
 * 
 * We will talk about how we select the parameters to build our model. Our current dataset has a ton of fields. We dont know which fields are good predictors of our outcomes.
 * The process to select suitable vairables for input into the model is a separate science so we will simply go over a high level overview of basic principles.
 * 
 * First issue, eliminate dependent variables. We dont want variables that DEPEND on the variable we are trying to predict (price). This should not be the case in our data set.
 * Imagine though that there was a field called sales tax. It contains amount of tax we would have to pay to buy the property. Sales tax is a percentage of that property.
 * This is a dependent variable. If we get a sales tax figure would we be able to accurately predict the property? No because if we dont know the price, we wont know the sales tax.
 * So the sales tax figure would be made up.
 * 
 * Second issue, understand a bit more about our data. DOes each variable have a sufficiently wide range of values? Helpful to know the minimum, maximum, and avg value of our labels and for
 * each features. We can find variation in the range too. If house range is between 100k - 1M but in our data most houses were around 700k then we know there isnt much variation.
 * Spark can give us this information with the .describe() method on a dataaset. 
 * 
 * We will make a new class called HousePriceFields.java again ill do mine in seperate lesson java files
 */
	
	
	}
}