//Lesson 14
package com.virtualpairprogrammers;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.apache.spark.SparkConf;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.api.java.JavaSparkContext;

import scala.Tuple2; 

public class Lesson14 {

	public static void main(String[] args) {
		
/* Lesson 14 Overview of Pair RDDs. COmmon to have a pair of values. So we can have a key and value pair. Advantage is having extra methods in a pair RDD such as grouping by key
 * New example: processing log files for a busy server
 * WARN: Tuesday 4 September 0405
 * ERROR: Tuesday 4 September 0408
 * 
 * simple format, left side is level of logging while right side (after colon) we have date and time log was produced. Goal, count how many warnings, errors, and fatals.
 * input testing data:
 */
		List<String> inputData = new ArrayList<>();
		inputData.add("WARN: Tuesday 4 September 0405"); 
		inputData.add("ERROR: Tuesday 4 September 0408"); 

		inputData.add(12);
		inputData.add(90);
		inputData.add(20);
		
		Logger.getLogger("org.apache").setLevel(Level.WARN); 
		
		SparkConf conf = new SparkConf().setAppName("startingSpark").setMaster("local[*]"); 
		JavaSparkContext sc = new JavaSparkContext(conf);
		
		JavaRDD<Integer> originalInteger = sc.parallelize(inputData);
		
		JavaRDD<Tuple2<Integer, Double>> sqrtRdd = originalInteger.map( value -> new Tuple2<>(value, Math.sqrt(value)) ); 

		
		Tuple2<Integer, Double> myValue = new Tuple2<> (9, 3.0);
	
		sc.close();
	}

}
