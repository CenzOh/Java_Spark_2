//Lesson 13
package com.virtualpairprogrammers;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.apache.spark.SparkConf;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.api.java.JavaSparkContext;

import scala.Tuple2; //this is the class we are importing below, in the scala package

public class Lesson13 {

	public static void main(String[] args) {

		List<Integer> inputData = new ArrayList<>();
		inputData.add(35); 
		inputData.add(12);
		inputData.add(90);
		inputData.add(20);
		
		Logger.getLogger("org.apache").setLevel(Level.WARN); 
		
		SparkConf conf = new SparkConf().setAppName("startingSpark").setMaster("local[*]"); 
		JavaSparkContext sc = new JavaSparkContext(conf);
		
		JavaRDD<Integer> originalInteger = sc.parallelize(inputData);
		
//		JavaRDD<IntegerWithSquareRoot> sqrtRdd = originalInteger.map( value -> new IntegerWithSquareRoot(value) );
//		JavaRDD<Tuple2<Integer, Double>> sqrtRdd = originalInteger.map( value -> new Tuple2<Integer, Double>(value, Math.sqrt(value)) ); //using Tuple2 instead of having to make a new class
		JavaRDD<Tuple2<Integer, Double>> sqrtRdd = originalInteger.map( value -> new Tuple2<>(value, Math.sqrt(value)) ); //recall if we declare type on left side, can remove on right side and infer

/* Lesson 13 
 * 
 */
		
		JavaRDD<Double> sqrtRdd = originalInteger.map( value -> Math.sqrt(value) );
		
	
		sc.close();
	}

}
