//Lesson 22
package com.virtualpairprogrammers;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.apache.spark.SparkConf;
import org.apache.spark.api.java.JavaPairRDD;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.api.java.JavaSparkContext;

import scala.Tuple2; 

public class Lesson22 {

	public static void main(String[] args) {
		
//Lesson 22 Practical Requirements and Keyword ranking
/* this is where everything comes together and we will make something more like a real spark program. What we want to do is: take subtitles file out of any of the courses
 * and generate automatically a set of ten keywords for that course. Key words should reflect major topics in the course.
 * If you check out spark documentaion, go to the RDD guide that will be helpful and applicable to us currently. Important ones to look at are transformations and actions
 * recall, transformations are where we tell Spark we want to transform an RDD from one form to another and spark will lazily evaluate the transformation once we get to an action 
 * 
 * 
 */
		
		System.setProperty("hadoop.home.dir", "c:/hadoop"); 
		
		List<String> inputData = new ArrayList<>();
		inputData.add("WARN: Tuesday 4 September 0405"); 
		inputData.add("ERROR: Tuesday 4 September 0408"); 
		inputData.add("FATAL: Wednesday 5 September 1632"); 
		inputData.add("ERROR: Friday 7 September 1854"); 
		inputData.add("WARN: Saturday 8 September 1942"); 

		Logger.getLogger("org.apache").setLevel(Level.WARN); 
		
		SparkConf conf = new SparkConf().setAppName("startingSpark").setMaster("local[*]"); 
		JavaSparkContext sc = new JavaSparkContext(conf);

		JavaRDD<String> initialRdd = sc.textFile("src/main/resources/subtitles/input.txt");
		
		initialRdd
			.flatMap( value -> Arrays.asList(value.split(" ")).iterator())
			.foreach(System.out::println);
				
		sc.close();
	}

}
