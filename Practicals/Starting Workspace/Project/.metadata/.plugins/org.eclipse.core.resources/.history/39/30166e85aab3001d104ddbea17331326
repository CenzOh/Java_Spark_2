package com.virtualpairprogrammers;

import org.apache.log4j.Level;
import org.apache.log4j.Logger;
import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Row;
import org.apache.spark.sql.SparkSession;

public class Lesson92 {

/* Lesson 92 Assembling a Vector of Features
 * 
 * First job, manipulate our data to be in right format for spark ML to use as input data for the methods to fit a good model for supervised learning! THis is what the format should look like:
 * 
 * label | features
 * 55 | {23, 180, 88}
 * 54 | {18, 169, 84|
 * ...
 * 
 * So recall the format is a dataset with two cols. For supervised models we have One label and one features. We can have extra cols but THEY WILL be ignored. Label column MUST be numeric
 * and will contain the num we are trying to predict (num of reps) / known outcomes in source data. Features is an array of values we want to feed in (weight, age, and height in our case).
 * We called the features an array but the idea is that it is an array of calues weight, height, age. Recall we are not including gender yet since right now all features must be num.
 */
	
	public static void main(String[] args) {
		
		System.setProperty("hadoop.home.dir", "c:/hadooop"); 
		Logger.getLogger("org.apache").setLevel(Level.WARN);
		
		SparkSession spark = SparkSession.builder()
				.appName("Gym Competitors")
				.config("spark.sql.warehouse.dir", "file:///c:/tmp/")
				.master("local[*]")
				.getOrCreate();
		
		Dataset<Row> csvData = spark.read().option("header",  true).csv("src/main/resources/GymCompetition.csv");
		
		csvData.show(); 
	}
}